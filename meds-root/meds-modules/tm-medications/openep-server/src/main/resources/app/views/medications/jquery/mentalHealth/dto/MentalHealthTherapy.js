Class.define('app.views.medications.mentalHealth.dto.MentalHealthTherapy', 'tm.jquery.Object', {
  statics: {
    /**
     * @param {object} jsonObject
     * @param {app.views.common.AppView} view
     * @return {app.views.medications.mentalHealth.dto.MentalHealthTherapy|null}
     */
    fromJson: function(jsonObject, view)
    {
      if (tm.jquery.Utils.isEmpty(jsonObject)) return null;
      var config = jQuery.extend(true, {}, jsonObject);
      config.mentalHealthMedicationDto =
          app.views.medications.mentalHealth.dto.MentalHealthMedication.fromJson(config.mentalHealthMedicationDto);
      return new app.views.medications.mentalHealth.dto.MentalHealthTherapy(config).updateFormattedDisplay(view);
    }
  },
  mentalHealthMedicationDto: null,
  genericName: null,
  therapyStatusEnum: null,
  formattedTherapyDisplay: null,

  /* constructor */
  Constructor: function(config)
  {
    this.callSuper(config);
  },

  /**
   * @return {app.views.medications.mentalHealth.dto.MentalHealthMedication}
   */
  getMentalHealthMedication: function()
  {
    return this.mentalHealthMedicationDto;
  },

  /**
   * @return {string|null}
   */
  getGenericName: function()
  {
    return this.genericName;
  },

  /**
   * @return {string|null} of {@link app.views.medications.TherapyEnums.therapyStatusEnum}.
   */
  getTherapyStatusEnum: function()
  {
    return this.therapyStatusEnum;
  },

  /**
   * Should be generated by the UI, unlike for other Therapy instances.
   * @return {string|null}
   */
  getFormattedTherapyDisplay: function()
  {
    return this.formattedTherapyDisplay;
  },

  /**
   * @return {boolean} true if the given prescription is currently active.
   */
  isActive: function()
  {
    return this.getTherapyStatusEnum() === app.views.medications.TherapyEnums.therapyStatusEnum.NORMAL;
  },

  /**
   * @return {string} of {@link app.views.medications.TherapyEnums.mentalHealthGroupEnum}
   */
  getMentalHealthGroup: function()
  {
    return this.isActive() ?
        app.views.medications.TherapyEnums.mentalHealthGroupEnum.INPATIENT_ACTIVE :
        app.views.medications.TherapyEnums.mentalHealthGroupEnum.INPATIENT_ABORTED;
  },

  /**
   * Changes the active route for this therapy and updates it's displayed value.
   * @param {app.views.medications.common.dto.MedicationRoute|null} route
   * @param {app.views.common.AppView} view
   */
  changeRoute: function(route, view)
  {
    this.getMentalHealthMedication().setRoute(route);
    this.updateFormattedDisplay(view);
  },

  /**
   * @return {number} returns the estimated length of the displayed name.
   */
  getNameDisplayLength: function()
  {
    return (this.getMentalHealthMedication().getName().length +
        (!!this.getGenericName() ? this.getGenericName().length : 0)) * 9 + 20;
  },

  /**
   * Generates the {@link #formattedTherapyDisplay} used by {@link app.views.medications.common.therapy.TherapyContainer}
   * to display the therapy description. This value is generated on the server for the majority of our therapy instances,
   * except for this one.
   * @param {app.views.common.AppView} view
   * @return {app.views.medications.mentalHealth.dto.MentalHealthTherapy} self
   */
  updateFormattedDisplay: function(view)
  {
    var routeName = !!this.getMentalHealthMedication().getRoute() ?
        this.getMentalHealthMedication().getRoute().getName() :
        undefined;
    var html = "";

    if (!!this.getGenericName())
    {
      html += '<span class="GenericName TextDataBold">' + this.getGenericName() + ' </span>';
    }
    if (!!this.getMentalHealthMedication().getName())
    {
      html += '<span class="MedicationName TextData">' + this.getMentalHealthMedication().getName() + ' </span>';
    }

    if (!!routeName)
    {
      html += '<br />';
      html += '<span class="Route TextLabel">' + view.getDictionary("route.short").toUpperCase() + ' </span>';
      html += '<span class="Route TextData">' + routeName + ' </span><br />';
    }
    this.formattedTherapyDisplay = html;
    return this;
  },

  /**
   * @param {boolean} [deep=true]
   * @return {app.views.medications.mentalHealth.dto.MentalHealthTherapy}
   */
  clone: function(deep)
  {
    return deep !== false ?
        jQuery.extend(true, new app.views.medications.mentalHealth.dto.MentalHealthTherapy(), this) :
        jQuery.extend(new app.views.medications.mentalHealth.dto.MentalHealthTherapy(), this);
  }
});
